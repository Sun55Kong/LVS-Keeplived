! Configuration File for keepalived
##################全局配置##########################
global_defs {
    #如有故障,发邮件地址
    notification_email {      
        9618154@qq.com              #收件人
    }
    notification_email_from Alexandre.Cassen@firewall.loc  #keepalived报警邮件,发件人
    smtp_server 192.168.200.1       #邮件服务器地址
    smtp_connect_timeout 30         #邮件服务器超时时间
    router_id LVS_01                #类似于MySQL的server-id,每个keepalived节点不能相同
}
#################keepalived配置#####################
vrrp_instance VI_1 {
    state MASTER                    #keepalived角色,MASTER和BACKUP
    interface eth0                  #通信接口,下面的virtual_ipaddress(VIP)绑定到这个网卡
    virtual_router_id 51            #vrrp_instance的唯一标识
    priority 150                    #keepalived权重,数值越大权重越大,MASTER应大于BACKUP
    advert_int 1                    #发送心跳间隔,如果backup1秒收不到心跳就接管,单位是秒
    authentication {                #每个keepalived节点通过这里设置的验证通信,必须得设置成一样
        auth_type PASS
        auth_pass 1111
    }
    virtual_ipaddress {
        192.168.0.89/24       #VIP
    }
}
##################LVS配置##############            
#添加虚拟服务器
#相当于 ipvsadm -A -t 192.168.0.89:80 -s wrr 
virtual_server 192.168.0.89 80 {
    delay_loop 6                    #服务健康检查周期,单位是秒
    lb_algo wrr                     #调度算法
    lb_kind DR                      #模式
    nat_mask 255.255.255.0   
    persistence_timeout 50          #回话保持时间,单位是秒
    protocol TCP                    #TCP协议转发
    #添加后端realserver
    #相当于 ipvsadm -a -t 192.168.0.89:80 -r 192.168.0.93:80 -w 1
    real_server 192.168.0.93 80  {  #realserver的真实IP
        weight 1                    #权重
        #健康检查
        TCP_CHECK {
            connect_timeout 8       #超时时间
            nb_get_retry 3          #重试次数
            delay_before_retry 3    #重试间隔
            connect_port 80         #检查realserver的80端口,如果80端口没监听,就会从集群中剔除
        }
    }
    real_server 192.168.0.94 80  {
        weight 1
        TCP_CHECK {
           connect_timeout 8
           nb_get_retry 3
           delay_before_retry 3
           connect_port 80
        }
    }

}
